name: tp1
services:
  gateway:
    container_name: gateway
    build:
      context: ./gateway
    image: gateway:latest
    networks:
      - testing_net
    depends_on:
      - genre_filter
      - games_counter
      - positivity_filter
      - game_review_filter
    volumes:
      - ./common:/common
    environment:
      - LOGGING_LEVEL=DEBUG
      - OUTPUT_EXCHANGES=["games"]
      - INPUT_QUEUES={"result_queue":"result_queue"}

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    image: client:latest
    networks:
      - testing_net
    depends_on:
      - gateway
    environment:
      - LOGGING_LEVEL=INFO
      - rabbitmq_RESULTS_QUEUE=result_queue
    volumes:
      - ./client/data:/data
      - ./client/config.ini:/client/config.ini
      - ./common:/common

  games_counter:
    container_name: games_counter
    build:
      context: ./games_counter
      dockerfile: Dockerfile
    image: games_counter:latest
    networks:
      - testing_net
    environment:
      - INPUT_QUEUES={"games_queue_counter":"games"}
      - OUTPUT_EXCHANGES=["result_queue"]
      - LOGGING_LEVEL=INFO
    volumes:
      - ./common:/common
    entrypoint: python3 main.py

  genre_filter:
    container_name: genre_filter
    build:
      context: ./genre_filter
    image: genre_filter:latest
    depends_on:
      - top10_indie_counter
      - game_review_filter
    networks:
      - testing_net
    environment:
      - OUTPUT_EXCHANGES=["indie_games"]
      - INPUT_QUEUES={"games_queue_filter":"games"}
      - LOGGING_LEVEL=DEBUG
      - GENRE=Indie
    volumes:
      - ./common:/common

  range_filter:
    container_name: range_filter
    build:
      context: ./range_filter
    image: range_filter:latest
    networks:
      - testing_net
    environment:
      - OUTPUT_EXCHANGES=["indie_range_games"]
      - INPUT_QUEUES={"indie_games_queue":"indie_games"}
      - LOGGING_LEVEL=DEBUG
    volumes:
      - ./common:/common

  top10_indie_counter:
    container_name: top10_indie_counter
    build:
      context: ./top10_indie_counter
      dockerfile: Dockerfile
    image: top10_indie_counter:latest
    networks:
      - testing_net
    environment:
      - OUTPUT_EXCHANGES=["result_queue"]
      - INPUT_QUEUES={"indie_range_games_queue":"indie_range_games"}
      - LOGGING_LEVEL=DEBUG
    volumes:
      - ./top10_indie_counter/data:/data
      - ./common:/common
    entrypoint: python3 main.py

  positivity_filter:
    container_name: positivity_filter
    build:
      context: ./positivity_filter
      dockerfile: Dockerfile
    image:
      positivity_filter:latest
    networks:
      - testing_net
    environment:
      - OUTPUT_EXCHANGES=["positive_reviews"]
      - INPUT_QUEUES={"reviews_queue":"reviews"}
      - LOGGING_LEVEL=DEBUG
      - POSITIVITY=1
    volumes:
      - ./common:/common

  game_review_filter:
    container_name: game_review_filter
    build:
      context: ./game_review_filter
      dockerfile: Dockerfile
    image: game_review_filter:latest
    depends_on:
      - game_review_positive_counter
    networks:
      - testing_net
    environment:
      - OUTPUT_EXCHANGES=["games_reviews"]
      - INPUT_GAMES_QUEUE=["indie_games_queue","indie_games"]
      - INPUT_REVIEWS_QUEUE=["positive_review_queue","positive_reviews"]
      - LOGGING_LEVEL=DEBUG
    volumes:
      - ./common:/common
      - ./game_review_filter/data:/data

  game_review_positive_counter:
    container_name: game_review_positive_counter
    build:
      context: ./review_counter
      dockerfile: Dockerfile
    image: review_counter:latest
    networks:
      - testing_net
    environment:
      - OUTPUT_EXCHANGES=["result_queue"]
      - INPUT_QUEUES={"games_reviews_queue":"games_reviews"}
      - LOGGING_LEVEL=DEBUG
    volumes:
      - ./common:/common
      - ./game_review_filter/data:/data





















networks:
  testing_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.125.0/24
